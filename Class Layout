Class Layout

  builder/
    * Renderable
    * Block: Renderable
    * BlockConnection
    * Component: Renderable
    * EditHistory
    * InstructionBuilder
  ui/
    * Edit
    * 
  util/

APPROACH:

  PHASE I: Building the underlying systems (backend)             20-22 days
    1. Build the rendering portion                               ~15 d
       (building a model)                                        
    2. Finalize a system for block                               2-3 d
       shapes and connectors                                     
    3. Build the exporting portion (exporting                    1-2 d
       it as a standardized 3D model)

    At this stage, we will be able to start testing the
    models physically to see if we can actually build a
    functioning model using the blocks we've designed. 

  PHASE II: Building the user interface (frontend)              15-20 days      
  4. Build the user interface                                     
     a. UI for adding and removing blocks                       5-10 d                           
     b. Remainder of the UI                                     10 d


  Total estimated time to complete: 35â€“42 days

  GUARANTEE OF TIME FULFILLED: 
    Because this 


  PHASE III (BONUSES):





CHALLENGING PROBLEMS:
  1. Rendering the model once it has been described
  2. Showing a live preview of edits to the model
  3. 



Coordinate system:
  use connectors as a sort of map relating blocks to the root
  e.g., if a cube has the following connectors:
    "u", "d", "n", "s", "e", "w" (up/down/4 cardinal directions)

  then a cube attached to it may be at position "root/up"
  and a cube attached to that one may be at position "root/up/north"
  and so on

  so a component can be described in a relatively straightforward manner
  as a series of instructions

  let 1=cube       <- macro, compresses file size

  1                <- describes root block (1 = cube)
  1@U              <- describes next block in relation to root  (@ connector "U" (up))
  1@U/N            <- describes next 
  1@U/